[% WRAPPER wrapper.tt2 page_title='Search' %]
	
	<style>
		#model_row
		{
			display: none;
			clear: both;
		}
		
		#headers,
		#criteria,
		#buttons
		{
			width: 600px;
			clear: both;
			font-family: Lucida, Helvetica, Sans-Serif;
			font-size: 8pt;
		}
		#headers h3
		{
			float: left;
			width: 300px;
		}
		#criteria .row
		{
			padding: 6px 0px;
			overflow:auto;
		}
		#criteria .row div 
		{
			float: left;
		}
		#criteria .row .remove
		{
			width: 35px;
		}
		#criteria .row .invert
		{
			width: 75px;
		}
		#criteria .row .criteria
		{
			width: 190px;
		}
		#criteria .row .values
		{
			display: none;
		}
		#criteria .row .values .label
		{
			padding-top: 3px;
			width: 50px;
		}
		#criteria .row .values .data
		{
			width: 250px;
		}
		#criteria .row .values_subject_type input,
		#criteria .row .values_ip_address input,
		#criteria .row .values_account_affected input,
		#criteria .row .values_account_logged_in input,
		#criteria .row .values_indexed_data input
		{
			width: 240px;
		}
		#criteria .row .values_date_range input
		{
			width: 100px;
		}
	</style>
	<style type="text/css">
		@import "css/jquery.datepick.css";
	</style>
	
	<script type="text/javascript" src="js/jquery.datepick.min.js"></script>
	<script>
		var count = 0;
		
		/* Adds a new row in the list of criteria */
		function add_new_criteria(invert, criteria, values){
			// Copy the row and set a unique ID on it
			$('#criteria').append(
				$('#model_row').html()
			);
			$('#criteria .row:last').attr('id', 'row_' + count);
			
			// Set unique names to the various inputs
			$('#criteria .row:last .remove input').bind(
				'click',
				function(e) {
					$('#' + $(this).parent().parent().attr('id') ).remove();
				}
			);
			
			// If criteria and invert are passed, set them
			if (invert != null) {
				$('#criteria .row:last .invert select').val(invert);
			}
			if (criteria != null) {
				$('#criteria .row:last .criteria select').val(criteria);
			}
			if (values != null) {
				show_values_div($('#criteria .row:last'), criteria, values);
			}
			
			// Add logic to display the different "values" DIVs based on the criteria
			// selected
			$('#criteria .row:last .criteria select').bind(
				'change',
				function(e) {
					var criteria = $(this).val();
					var container = $(this).parent().parent();
					show_values_div(container, criteria);
				}
			);
			count++;
		}
		
		/* Show the UI to select the values for a given criteria */
		function show_values_div(container, criteria, values) {
			var value;
			if (values != null) {
				value = values.split('::');
			} else {
				value = new Array();
			}
			container.find('.values').css('display', 'none');
			
			if ( criteria == 'ip_address' ) {
				container.find('.values_ip_address').css('display', 'block');
				container.find('.values_ip_address input').val(value[0]);
			
			} else if ( criteria == 'date_range' ) {
				container.find('.values_date_range').css('display', 'block');
				var from = container.find('.values_date_range input:first');
				from.val(value[0]);
				from.datepick();
				var to = container.find('.values_date_range input:last');
				to.val(value[1]);
				to.datepick();
			
			} else if ( criteria == 'subject_type' ) {
				container.find('.values_subject_type').css('display', 'block');
				container.find('.values_subject_type input:first').val(value[0]);
				container.find('.values_subject_type input:last').val(value[1]);
			
			} else if ( criteria == 'event' ) {
				container.find('.values_event').css('display', 'block');
				container.find('.values_event input').val(value[0]);
			
			} else if ( criteria == 'account_logged_in' ) {
				container.find('.values_account_logged_in').css('display', 'block');
				container.find('.values_account_logged_in input').val(value[0]);
			
			} else if ( criteria == 'account_affected' ) {
				container.find('.values_account_affected').css('display', 'block');
				container.find('.values_account_affected input').val(value[0]);
			
			} else if ( criteria == 'indexed_data' ) {
				container.find('.values_indexed_data').css('display', 'block');
				container.find('.values_indexed_data input:first').val(value[0]);
				container.find('.values_indexed_data input:last').val(value[1]);
			}
		}
		
		/* Makes a URL representing the parameters chosen in the UI */
		function submit_search() {
			var url = '?action=results';
			jQuery.each(
				$('#criteria .row'),
				function() {
					// Find the various values for the search
					var invert = $(this).find('.invert select').val();
					var criteria = $(this).find('.criteria select').val();
					if (criteria == '') return;
					url += '&' + escape(criteria + invert) + '=';
					
					// Find the specific search values
					if ( criteria == 'ip_address' ) {
						var ip_addresses = $(this).find('.values_ip_address input').val();
						url += escape(ip_addresses);
					} else if ( criteria == 'date_range' ) {
						var from = $(this).find('.values_date_range input:first').val();
						var to = $(this).find('.values_date_range input:last').val();
						url += escape(from) + '::' + escape(to);
					} else if ( criteria == 'subject_type' ) {
						var type = $(this).find('.values_subject_type input:first').val();
						var IDs = $(this).find('.values_subject_type input:last').val();
						url += escape(type) + '::' + escape(IDs);
					} else if ( criteria == 'event' ) {
						var event = $(this).find('.values_event input').val();
						url += escape(event);
					} else if ( criteria == 'account_logged_in' ) {
						var account_logged_in = $(this).find('.values_account_logged_in input').val();
						url += escape(account_logged_in);
					} else if ( criteria == 'account_affected' ) {
						var account_affected = $(this).find('.values_account_affected input').val();
						url += escape(account_affected);
					} else if ( criteria == 'indexed_data' ) {
						var type = $(this).find('.values_indexed_data input:first').val();
						var values = $(this).find('.values_indexed_data input:last').val();
						url += escape(type) + '::' + escape(values);
					}
				}
			);
			
			window.location.href = url;
		}
		
		/* After loading, populate criteria with input if available */
		window.onload = function() {
			// Check for parameters and populate the criteria accordingly
			var rows_added = false;
			var params = window.location.search.substring(1).split('&');
			jQuery.each(
				params,
				function() {
					var temp = this.split('=');
					if (temp[0] == '' || temp[0] == 'action') return;
					
					var invert = temp[0].substr(-1);
					var criteria = temp[0].substr(0, temp[0].length-1);
					
					add_new_criteria(invert, criteria, unescape(temp[1]));
					rows_added = true;
				}
			);
			
			// If no row was created, create an empty row
			if (!rows_added) {
				add_new_criteria();
			}
		}
	</script>
	<h1>
		Audit :: Search
	</h1>
	
	<p style="font-size: 14px; font-weight: bold; color: red;">
		IMPORTANT: searching audit logs takes a lot of resources and may bring a server down if used with broad criteria.<br/>
		Please narrow your search criteria as much as possible, and always use a date range.
	</p>
	
	<div class="box">
		<div id="headers">
			<h3>Criteria</h3>
			<h3>Values</h3>
		</div>
		<div id="criteria">
		</div>
		<div id="buttons">
			<input type="button" value="Add criteria" onClick="Javascript:add_new_criteria();">
			<input type="button" value="Submit" onClick="Javascript:submit_search();" style="float: right;">
		</div>
	</div>
	
	<div id="model_row">
		<div class="row">
			<div class="remove">
				<input type="button" value="X">
			</div>
			<div class="invert">
				<select>
					<option value="1">has</option>
					<option value="0">has not</option>
				</select>
			</div>
			<div class="criteria">
				<select>
					<option value="">- Select Criteria -</option>
					<option value="ip_address">IP Address</option>
					<option value="event">Event</option>
					<option value="date_range">Date Range</option>
					<option value="subject_type">Subject Type</option>
					<option value="account_logged_in">Account Logged-in</option>
					<option value="account_affected">Account Affected</option>
					<option value="indexed_data">Search Indexed Data</option>
				</select>
			</div>
			
			<!-- Search by IP range -->
			<div class="values values_ip_address">
				<div class="label">values:</div>
				<div class="data">
					<input type="text" name="ip_addresses">
				</div>
			</div>
			
			<!-- Search by date range -->
			<div class="values values_date_range">
				<div class="label">from:</div>
				<div class="data">
					<input type="text" name="date_range_from">
				</div>
				<div class="label" style="clear: left;">to:</div>
				<div class="data">
					<input type="text" name="date_range_to">
				</div>
			</div>
			
			<!-- Search by subject type -->
			<div class="values values_subject_type">
				<div class="label">type:</div>
				<div class="data">
					<input type="text" name="subject_type">
				</div>
				<div class="label" style="clear: left;">IDs:</div>
				<div class="data">
					<input type="text" name="subject_ids">
				</div>
			</div>
			
			<!-- Search by event -->
			<div class="values values_event">
				<div class="label" style="clear: left;">Value:</div>
				<div class="data">
					<input type="text" name="event">
				</div>
			</div>
			
			<!-- Search by account logged in -->
			<div class="values values_account_logged_in">
				<div class="label" style="clear: left;">IDs:</div>
				<div class="data">
					<input type="text" name="account_logged_in">
				</div>
			</div>
			
			<!-- Search by account affected -->
			<div class="values values_account_affected">
				<div class="label" style="clear: left;">IDs:</div>
				<div class="data">
					<input type="text" name="account_affected">
				</div>
			</div>
			
			<!-- Search by indexed values -->
			<div class="values values_indexed_data">
				<div class="label">key:</div>
				<div class="data">
					<input type="text" name="indexed_data_key">
				</div>
				<div class="label" style="clear: left;">values:</div>
				<div class="data">
					<input type="text" name="indexed_data_values">
				</div>
			</div>
		</div>
	</div>
	
[% END %]
